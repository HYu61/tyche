<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.hyu.tyche.dao.UsersMapperCustomized">
  <resultMap id="BaseResultMap" type="pers.hyu.tyche.pojo.entity.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="profile_photo" jdbcType="VARCHAR" property="profilePhoto" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="follower_counts" jdbcType="INTEGER" property="followerCounts" />
    <result column="follow_counts" jdbcType="INTEGER" property="followCounts" />
    <result column="received_like_counts" jdbcType="INTEGER" property="receivedLikeCounts" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="security_answer" jdbcType="VARCHAR" property="securityAnswer" />
  </resultMap>

  <resultMap id="ResponseMap" type="pers.hyu.tyche.pojo.model.response.UserResponseModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="profile_photo" jdbcType="VARCHAR" property="profilePhoto" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="follower_counts" jdbcType="INTEGER" property="followerCounts" />
    <result column="follow_counts" jdbcType="INTEGER" property="followCounts" />
    <result column="received_like_counts" jdbcType="INTEGER" property="receivedLikeCounts" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>


  <select id="selectExistsUser" resultMap="BaseResultMap" parameterType="java.lang.String">
    select username, status from users where username = #{usernameOrId} or id = #{usernameOrId} limit 1
  </select>

  <select id="selectByUsernameAndPassword" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from users where username = #{username} and password = #{password} limit 1
  </select>

  <select id="selectByUsernameAndSecurityAnswer" resultMap="BaseResultMap" parameterType="java.lang.String">
    select id from users where username = #{username} and security_answer = #{answer} limit 1
  </select>

<!--   the result use user response model-->
  <select id="selectUserFollows" resultMap="ResponseMap" parameterType="java.lang.String">
    select * from users  where id in (select user_id from users_followers where follower_id = #{userId})
  </select>

  <update id="addReceivedLikeCount" parameterType="String">
    update users
    set received_like_counts = received_like_counts + 1
    where id = #{userId}
  </update>

  <update id="reduceReceivedLikeCount" parameterType="hashmap" >
    update users
    set received_like_counts = received_like_counts - #{count}
    where id = #{userId}
  </update>

  <update id="addFollowerCount" parameterType="String">
    update users
    set follower_counts = follower_counts + 1
    where id = #{userId}
  </update>

  <update id="reduceFollowerCount" parameterType="String">
    update users
    set follower_counts = follower_counts - 1
    where id = #{userId}
  </update>

  <update id="addFollowCount" parameterType="String">
    update users
    set follow_counts = follow_counts + 1
    where id = #{userId}
  </update>

  <update id="reduceFollowCount" parameterType="String">
    update users
    set follow_counts = follow_counts - 1
    where id = #{userId}
  </update>


</mapper>