<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.hyu.tyche.dao.VideosMapperCustomized">
    <resultMap id="BaseResultMap" type="pers.hyu.tyche.pojo.model.dto.VideoDto">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="bmg_id" jdbcType="VARCHAR" property="bmgId"/>
        <result column="video_desc" jdbcType="VARCHAR" property="videoDesc"/>
        <result column="video_path" jdbcType="VARCHAR" property="videoPath"/>
        <result column="video_seconds" jdbcType="REAL" property="videoSeconds"/>
        <result column="video_width" jdbcType="INTEGER" property="videoWidth"/>
        <result column="video_height" jdbcType="INTEGER" property="videoHeight"/>
        <result column="cover_path" jdbcType="VARCHAR" property="coverPath"/>
        <result column="like_counts" jdbcType="INTEGER" property="likeCounts"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

        <!--    set vipVideo according to the status-->
        <result column="status" jdbcType="BIT" property="vipVideo"/>

        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="profile_photo" jdbcType="VARCHAR" property="profilePhoto"/>
    </resultMap>


    <select id="selectVideoCoversByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT *
        FROM videos
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>


    <select id="selectVideoCovers" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT v.id, v.cover_path, v.status, u.profile_photo as profile_photo, u.nickname as nickname
        FROM videos v
        LEFT JOIN users u
        ON v.user_id = u.id
        <where>
            <if test="#{value} != null  and #{value} != ''">
                <bind name="searchContent" value="'%' + _parameter + '%'"/>
                and (v.video_desc LIKE #{searchContent} OR u.nickname LIKE #{searchContent} )
            </if>
            and v.status >= 0
        </where>
        ORDER BY v.create_time DESC
    </select>

    <select id="selectVideoById" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT v.*, u.profile_photo as profile_photo, u.nickname as nickname
        FROM videos v
        LEFT JOIN users u
        ON v.user_id = u.id
        WHERE v.id = #{videoId}
    </select>

    <update id="addLikeCounts" parameterType="String">
        update videos set like_counts = like_counts + 1 where id = #{videoId}
    </update>

    <update id="reduceLikeCounts" parameterType="String">
        update videos set like_counts = like_counts - 1 where id = #{videoId}
    </update>

    <select id="selectUserLikedVideoCovers" resultMap="BaseResultMap" parameterType="String">
    select v.*
    from videos as v
    where v.id in (select ulv.video_id from users_liked_videos as ulv where ulv.user_id =#{userId})
    ORDER BY v.create_time DESC
  </select>
</mapper>